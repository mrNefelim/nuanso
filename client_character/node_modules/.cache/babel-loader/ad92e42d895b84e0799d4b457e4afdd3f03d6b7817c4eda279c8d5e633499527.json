{"ast":null,"code":"const STORAGE_KEY = 'personas';\nexport const getPersona = async id => {\n  const personas = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n  const persona = personas.find(p => p.id === id);\n  if (!persona) {\n    throw new Error('Persona not found');\n  }\n  if (persona.avatarUrl && !persona.avatarUrl.startsWith('avatar')) {\n    persona.avatarUrl = `avatar${persona.avatarUrl}`;\n  }\n  return {\n    ...persona,\n    characteristics: persona.characteristics || []\n  };\n};\nexport const updatePersona = async (id, persona) => {\n  const personas = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n  const index = personas.findIndex(p => p.id === id);\n  if (index === -1) {\n    throw new Error('Persona not found');\n  }\n  if (persona.avatarUrl && !persona.avatarUrl.startsWith('avatar')) {\n    persona.avatarUrl = `avatar${persona.avatarUrl}`;\n  }\n  const updatedPersona = {\n    ...persona,\n    characteristics: persona.characteristics || []\n  };\n  personas[index] = updatedPersona;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(personas));\n  return updatedPersona;\n};","map":{"version":3,"names":["STORAGE_KEY","getPersona","id","personas","JSON","parse","localStorage","getItem","persona","find","p","Error","avatarUrl","startsWith","characteristics","updatePersona","index","findIndex","updatedPersona","setItem","stringify"],"sources":["/Users/dmitrii/Projects/client_character/src/api/index.ts"],"sourcesContent":["import { Persona } from '../types/index';\n\nconst STORAGE_KEY = 'personas';\n\nexport const getPersona = async (id: string): Promise<Persona> => {\n  const personas = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n  const persona = personas.find((p: Persona) => p.id === id);\n  \n  if (!persona) {\n    throw new Error('Persona not found');\n  }\n  \n  if (persona.avatarUrl && !persona.avatarUrl.startsWith('avatar')) {\n    persona.avatarUrl = `avatar${persona.avatarUrl}`;\n  }\n  \n  return {\n    ...persona,\n    characteristics: persona.characteristics || []\n  };\n};\n\nexport const updatePersona = async (id: string, persona: Persona): Promise<Persona> => {\n  const personas = JSON.parse(localStorage.getItem(STORAGE_KEY) || '[]');\n  const index = personas.findIndex((p: Persona) => p.id === id);\n  \n  if (index === -1) {\n    throw new Error('Persona not found');\n  }\n  \n  if (persona.avatarUrl && !persona.avatarUrl.startsWith('avatar')) {\n    persona.avatarUrl = `avatar${persona.avatarUrl}`;\n  }\n  \n  const updatedPersona = {\n    ...persona,\n    characteristics: persona.characteristics || []\n  };\n  \n  personas[index] = updatedPersona;\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(personas));\n  \n  return updatedPersona;\n}; "],"mappings":"AAEA,MAAMA,WAAW,GAAG,UAAU;AAE9B,OAAO,MAAMC,UAAU,GAAG,MAAOC,EAAU,IAAuB;EAChE,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACP,WAAW,CAAC,IAAI,IAAI,CAAC;EACtE,MAAMQ,OAAO,GAAGL,QAAQ,CAACM,IAAI,CAAEC,CAAU,IAAKA,CAAC,CAACR,EAAE,KAAKA,EAAE,CAAC;EAE1D,IAAI,CAACM,OAAO,EAAE;IACZ,MAAM,IAAIG,KAAK,CAAC,mBAAmB,CAAC;EACtC;EAEA,IAAIH,OAAO,CAACI,SAAS,IAAI,CAACJ,OAAO,CAACI,SAAS,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;IAChEL,OAAO,CAACI,SAAS,GAAG,SAASJ,OAAO,CAACI,SAAS,EAAE;EAClD;EAEA,OAAO;IACL,GAAGJ,OAAO;IACVM,eAAe,EAAEN,OAAO,CAACM,eAAe,IAAI;EAC9C,CAAC;AACH,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOb,EAAU,EAAEM,OAAgB,KAAuB;EACrF,MAAML,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAACP,WAAW,CAAC,IAAI,IAAI,CAAC;EACtE,MAAMgB,KAAK,GAAGb,QAAQ,CAACc,SAAS,CAAEP,CAAU,IAAKA,CAAC,CAACR,EAAE,KAAKA,EAAE,CAAC;EAE7D,IAAIc,KAAK,KAAK,CAAC,CAAC,EAAE;IAChB,MAAM,IAAIL,KAAK,CAAC,mBAAmB,CAAC;EACtC;EAEA,IAAIH,OAAO,CAACI,SAAS,IAAI,CAACJ,OAAO,CAACI,SAAS,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;IAChEL,OAAO,CAACI,SAAS,GAAG,SAASJ,OAAO,CAACI,SAAS,EAAE;EAClD;EAEA,MAAMM,cAAc,GAAG;IACrB,GAAGV,OAAO;IACVM,eAAe,EAAEN,OAAO,CAACM,eAAe,IAAI;EAC9C,CAAC;EAEDX,QAAQ,CAACa,KAAK,CAAC,GAAGE,cAAc;EAChCZ,YAAY,CAACa,OAAO,CAACnB,WAAW,EAAEI,IAAI,CAACgB,SAAS,CAACjB,QAAQ,CAAC,CAAC;EAE3D,OAAOe,cAAc;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}