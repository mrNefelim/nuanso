{"ast":null,"code":"var _jsxFileName = \"/Users/dmitrii/Projects/client_character/src/pages/Play.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport SettingSelector from '../components/SettingSelector';\nimport ProgressBar from '../components/ProgressBar';\nimport AvatarSelector from '../components/AvatarSelector';\nimport { createPersona } from '../services/personaService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst questions = [{\n  id: 1,\n  text: \"Какая основная цель вашего клиента?\",\n  options: [\"Продвижение по карьере\", \"Финансовая стабильность\", \"Личностный рост\", \"Семейное благополучие\"],\n  category: \"goals\"\n}, {\n  id: 2,\n  text: \"Что больше всего беспокоит вашего клиента?\",\n  options: [\"Нехватка времени\", \"Финансовые проблемы\", \"Неопределенность будущего\", \"Отсутствие баланса\"],\n  category: \"pains\"\n}];\nconst Play = () => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(0);\n  const [selectedSetting, setSelectedSetting] = useState(null);\n  const [selectedAvatar, setSelectedAvatar] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const navigate = useNavigate();\n  const handleAnswer = answer => {\n    const currentQuestion = questions[currentStep - 1];\n    setAnswers(prev => ({\n      ...prev,\n      [currentQuestion.id.toString()]: answer\n    }));\n    if (currentStep < questions.length) {\n      setCurrentStep(prev => prev + 1);\n    } else {\n      setCurrentStep(questions.length + 1);\n    }\n  };\n  const handleSettingSelect = setting => {\n    setSelectedSetting(setting);\n    setCurrentStep(1);\n  };\n  const handleAvatarSelect = avatarUrl => {\n    setSelectedAvatar(avatarUrl);\n  };\n  const handleComplete = async () => {\n    if (!selectedAvatar) return;\n    const persona = {\n      name: 'Новый персонаж',\n      age: 30,\n      job: 'Профессия',\n      goals: [answers['1']],\n      pains: [answers['2']],\n      quote: 'Цитата персонажа',\n      avatarUrl: selectedAvatar,\n      style: selectedSetting || 'minimal',\n      createdAt: new Date().toISOString(),\n      questionsMeta: answers\n    };\n    const personaId = await createPersona(persona);\n    navigate(`/card/${personaId}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-b from-purple-100 to-white py-16\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-2xl mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n          currentStep: currentStep,\n          totalSteps: questions.length + 1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n          mode: \"wait\",\n          children: [currentStep === 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            exit: {\n              opacity: 0,\n              y: -20\n            },\n            children: /*#__PURE__*/_jsxDEV(SettingSelector, {\n              onSelect: handleSettingSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, \"setting\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), currentStep > 0 && currentStep <= questions.length && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            exit: {\n              opacity: 0,\n              y: -20\n            },\n            className: \"bg-white rounded-lg shadow-lg p-8\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold text-purple-900 mb-6\",\n              children: questions[currentStep - 1].text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"space-y-4\",\n              children: questions[currentStep - 1].options.map(option => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleAnswer(option),\n                className: \"w-full p-4 text-left border border-purple-200 rounded-lg hover:bg-purple-50 transition-colors\",\n                children: option\n              }, option, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, \"question\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this), currentStep > questions.length && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 20\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            exit: {\n              opacity: 0,\n              y: -20\n            },\n            children: [/*#__PURE__*/_jsxDEV(AvatarSelector, {\n              onSelect: handleAvatarSelect\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleComplete,\n              className: \"mt-8 w-full bg-purple-600 text-white py-3 rounded-lg hover:bg-purple-700 transition-colors\",\n              disabled: !selectedAvatar,\n              children: \"\\u0417\\u0430\\u0432\\u0435\\u0440\\u0448\\u0438\\u0442\\u044C \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, \"avatar\", true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(Play, \"nWwNZKDWXQMFi8FZQuqE1Yw2Ems=\", false, function () {\n  return [useNavigate];\n});\n_c = Play;\nexport default Play;\nvar _c;\n$RefreshReg$(_c, \"Play\");","map":{"version":3,"names":["React","useState","useNavigate","motion","AnimatePresence","SettingSelector","ProgressBar","AvatarSelector","createPersona","jsxDEV","_jsxDEV","questions","id","text","options","category","Play","_s","currentStep","setCurrentStep","selectedSetting","setSelectedSetting","selectedAvatar","setSelectedAvatar","answers","setAnswers","navigate","handleAnswer","answer","currentQuestion","prev","toString","length","handleSettingSelect","setting","handleAvatarSelect","avatarUrl","handleComplete","persona","name","age","job","goals","pains","quote","style","createdAt","Date","toISOString","questionsMeta","personaId","className","children","totalSteps","fileName","_jsxFileName","lineNumber","columnNumber","mode","div","initial","opacity","y","animate","exit","onSelect","map","option","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/dmitrii/Projects/client_character/src/pages/Play.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport SettingSelector from '../components/SettingSelector';\nimport ProgressBar from '../components/ProgressBar';\nimport AvatarSelector from '../components/AvatarSelector';\nimport { Question, PersonaCard } from '../types/index';\nimport { createPersona } from '../services/personaService';\n\nconst questions: Question[] = [\n  {\n    id: 1,\n    text: \"Какая основная цель вашего клиента?\",\n    options: [\"Продвижение по карьере\", \"Финансовая стабильность\", \"Личностный рост\", \"Семейное благополучие\"],\n    category: \"goals\"\n  },\n  {\n    id: 2,\n    text: \"Что больше всего беспокоит вашего клиента?\",\n    options: [\"Нехватка времени\", \"Финансовые проблемы\", \"Неопределенность будущего\", \"Отсутствие баланса\"],\n    category: \"pains\"\n  }\n];\n\nconst Play: React.FC = () => {\n  const [currentStep, setCurrentStep] = useState(0);\n  const [selectedSetting, setSelectedSetting] = useState<'minimal' | 'fantasy' | 'business' | 'scifi' | null>(null);\n  const [selectedAvatar, setSelectedAvatar] = useState<string | null>(null);\n  const [answers, setAnswers] = useState<Record<string, string>>({});\n  const navigate = useNavigate();\n\n  const handleAnswer = (answer: string) => {\n    const currentQuestion = questions[currentStep - 1];\n    setAnswers(prev => ({\n      ...prev,\n      [currentQuestion.id.toString()]: answer\n    }));\n\n    if (currentStep < questions.length) {\n      setCurrentStep(prev => prev + 1);\n    } else {\n      setCurrentStep(questions.length + 1);\n    }\n  };\n\n  const handleSettingSelect = (setting: 'minimal' | 'fantasy' | 'business' | 'scifi') => {\n    setSelectedSetting(setting);\n    setCurrentStep(1);\n  };\n\n  const handleAvatarSelect = (avatarUrl: string) => {\n    setSelectedAvatar(avatarUrl);\n  };\n\n  const handleComplete = async () => {\n    if (!selectedAvatar) return;\n\n    const persona: Omit<PersonaCard, 'id'> = {\n      name: 'Новый персонаж',\n      age: 30,\n      job: 'Профессия',\n      goals: [answers['1']],\n      pains: [answers['2']],\n      quote: 'Цитата персонажа',\n      avatarUrl: selectedAvatar,\n      style: selectedSetting || 'minimal',\n      createdAt: new Date().toISOString(),\n      questionsMeta: answers\n    };\n\n    const personaId = await createPersona(persona);\n    navigate(`/card/${personaId}`);\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-b from-purple-100 to-white py-16\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"max-w-2xl mx-auto\">\n          <ProgressBar currentStep={currentStep} totalSteps={questions.length + 1} />\n\n          <AnimatePresence mode=\"wait\">\n            {currentStep === 0 && (\n              <motion.div\n                key=\"setting\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n              >\n                <SettingSelector onSelect={handleSettingSelect} />\n              </motion.div>\n            )}\n\n            {currentStep > 0 && currentStep <= questions.length && (\n              <motion.div\n                key=\"question\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n                className=\"bg-white rounded-lg shadow-lg p-8\"\n              >\n                <h2 className=\"text-2xl font-bold text-purple-900 mb-6\">\n                  {questions[currentStep - 1].text}\n                </h2>\n                <div className=\"space-y-4\">\n                  {questions[currentStep - 1].options.map((option: string) => (\n                    <button\n                      key={option}\n                      onClick={() => handleAnswer(option)}\n                      className=\"w-full p-4 text-left border border-purple-200 rounded-lg hover:bg-purple-50 transition-colors\"\n                    >\n                      {option}\n                    </button>\n                  ))}\n                </div>\n              </motion.div>\n            )}\n\n            {currentStep > questions.length && (\n              <motion.div\n                key=\"avatar\"\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                exit={{ opacity: 0, y: -20 }}\n              >\n                <AvatarSelector onSelect={handleAvatarSelect} />\n                <button\n                  onClick={handleComplete}\n                  className=\"mt-8 w-full bg-purple-600 text-white py-3 rounded-lg hover:bg-purple-700 transition-colors\"\n                  disabled={!selectedAvatar}\n                >\n                  Завершить создание\n                </button>\n              </motion.div>\n            )}\n          </AnimatePresence>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Play; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}