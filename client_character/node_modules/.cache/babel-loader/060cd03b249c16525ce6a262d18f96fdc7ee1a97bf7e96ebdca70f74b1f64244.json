{"ast":null,"code":"import { db } from '../firebase/config';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc, query, where } from 'firebase/firestore';\nexport const createPersona = async persona => {\n  const docRef = await addDoc(collection(db, 'personas'), persona);\n  return docRef.id;\n};\nexport const getPersonasByUser = async uid => {\n  const q = query(collection(db, 'personas'), where('uid', '==', uid));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  }));\n};\nexport const updatePersona = async (id, updates) => {\n  const personaRef = doc(db, 'personas', id);\n  await updateDoc(personaRef, updates);\n};\nexport const deletePersona = async id => {\n  const personaRef = doc(db, 'personas', id);\n  await deleteDoc(personaRef);\n};","map":{"version":3,"names":["db","collection","addDoc","getDocs","doc","updateDoc","deleteDoc","query","where","createPersona","persona","docRef","id","getPersonasByUser","uid","q","querySnapshot","docs","map","data","updatePersona","updates","personaRef","deletePersona"],"sources":["/Users/dmitrii/Projects/client_character/src/services/personaService.ts"],"sourcesContent":["import { db } from '../firebase/config';\nimport { collection, addDoc, getDocs, doc, updateDoc, deleteDoc, query, where } from 'firebase/firestore';\nimport { PersonaCard } from '../types';\n\nexport const createPersona = async (persona: Omit<PersonaCard, 'id'>): Promise<string> => {\n  const docRef = await addDoc(collection(db, 'personas'), persona);\n  return docRef.id;\n};\n\nexport const getPersonasByUser = async (uid: string): Promise<PersonaCard[]> => {\n  const q = query(collection(db, 'personas'), where('uid', '==', uid));\n  const querySnapshot = await getDocs(q);\n  return querySnapshot.docs.map(doc => ({\n    id: doc.id,\n    ...doc.data()\n  })) as PersonaCard[];\n};\n\nexport const updatePersona = async (id: string, updates: Partial<PersonaCard>): Promise<void> => {\n  const personaRef = doc(db, 'personas', id);\n  await updateDoc(personaRef, updates);\n};\n\nexport const deletePersona = async (id: string): Promise<void> => {\n  const personaRef = doc(db, 'personas', id);\n  await deleteDoc(personaRef);\n}; "],"mappings":"AAAA,SAASA,EAAE,QAAQ,oBAAoB;AACvC,SAASC,UAAU,EAAEC,MAAM,EAAEC,OAAO,EAAEC,GAAG,EAAEC,SAAS,EAAEC,SAAS,EAAEC,KAAK,EAAEC,KAAK,QAAQ,oBAAoB;AAGzG,OAAO,MAAMC,aAAa,GAAG,MAAOC,OAAgC,IAAsB;EACxF,MAAMC,MAAM,GAAG,MAAMT,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEU,OAAO,CAAC;EAChE,OAAOC,MAAM,CAACC,EAAE;AAClB,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,GAAW,IAA6B;EAC9E,MAAMC,CAAC,GAAGR,KAAK,CAACN,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEQ,KAAK,CAAC,KAAK,EAAE,IAAI,EAAEM,GAAG,CAAC,CAAC;EACpE,MAAME,aAAa,GAAG,MAAMb,OAAO,CAACY,CAAC,CAAC;EACtC,OAAOC,aAAa,CAACC,IAAI,CAACC,GAAG,CAACd,GAAG,KAAK;IACpCQ,EAAE,EAAER,GAAG,CAACQ,EAAE;IACV,GAAGR,GAAG,CAACe,IAAI,CAAC;EACd,CAAC,CAAC,CAAC;AACL,CAAC;AAED,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOR,EAAU,EAAES,OAA6B,KAAoB;EAC/F,MAAMC,UAAU,GAAGlB,GAAG,CAACJ,EAAE,EAAE,UAAU,EAAEY,EAAE,CAAC;EAC1C,MAAMP,SAAS,CAACiB,UAAU,EAAED,OAAO,CAAC;AACtC,CAAC;AAED,OAAO,MAAME,aAAa,GAAG,MAAOX,EAAU,IAAoB;EAChE,MAAMU,UAAU,GAAGlB,GAAG,CAACJ,EAAE,EAAE,UAAU,EAAEY,EAAE,CAAC;EAC1C,MAAMN,SAAS,CAACgB,UAAU,CAAC;AAC7B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}